<form>
    <script>
        //Selected_Items = [];
        function Intitialize() {

            //let filter_selections = compnav_form_container.dataset.filter_selections;
            //console.log(Object.keys(filter_selections));            
            
            let doc_class_selected = compnav_form_container.dataset.doc_class_selected;
            let class_types_selected = compnav_form_container.dataset.class_types_selected;
            FillBubble(class_types_selected, "compnav_class_type_", "compnav-class-type-selected");
            let game_pack_names = compnav_form_container.dataset.game_pack_names;
            FillBubble(game_pack_names, "compnav_game_pack_name_", "compnav-display-none");
            let game_pack_keys_selected = compnav_form_container.dataset.game_pack_keys_selected;
            FillBubble(game_pack_keys_selected, "compnav_game_pack_name_", "compnav-game-pack-name-selected");

            let filter_fields_json = compnav_form_container.dataset.filter_fields_json;
            let filter_fields_obj = null;
            if (filter_fields_json !== "") {
                filter_fields_obj = JSON.parse(filter_fields_json);
            }

            if({{{show_delete_cf_tempentity}}}){
            document.getElementById("p_delete_cf_entity").classList.remove("compnav-display-none");
            }

            //console.log("Compnav | BuildFilterControls");
            // Save Field selections
            let filter_selections = [];
            {{#each filter_selections as |filter_selections id|}}
                filter_selections["{{id}}"] = "{{filter_selections}}";
            {{/each}}
            //document.getElementById("filter_name").value = (filter_selections["name"] ? filter_selections["name"] : "");

            this.BuildFilterControls(filter_selections, filter_fields_obj);
        }
        // The parent_filter_container wasn't working out, but I still want to be able to group items in the same container
        // so just leaving it commented out for now until I can get back to it.
        function BuildFilterControls(filter_selections, filter_fields_obj, is_child, root = "") {
            for (let key in filter_fields_obj) {
                let value = filter_fields_obj[key];
                if (filter_fields_obj.hasOwnProperty(key)) {
                    let field_label = document.createElement("label");
                    if (is_child && typeof (value) !== "object") { field_label.classList.add("compnav-filter-child-label"); }

                    let field_span = document.createElement("span");
                    field_span.textContent = (!is_child ? "" : "." ) + key;
                    field_label.appendChild(field_span);
                    let h3 = null;
                    if (!is_child || typeof (value) === "object") { 
                        h3 = document.createElement("h3");
                        h3.appendChild(field_label);
                    }

                    let filter_container = null;
                    //if(!parent_filter_container){
                    filter_container = document.createElement("div");
                    filter_container.classList.add("compnav-form-group");
                    filter_container.appendChild(h3 !== null ? h3 : field_label);
                    //}
                    //else{
                    //    //let br = document.createElement("br");
                    //    //parent_filter_container.appendChild(br);
                    //    parent_filter_container.appendChild(field_label);
                    //}
                    let data_root_key = root + key
                    if (typeof (value) !== "object") {
                        let field_container = document.createElement("div");
                        field_container.classList.add("compnav-form-fields");
                        let field_filter = document.createElement("input");
                        field_filter.setAttribute("placeholder", value);
                        field_filter.classList.add("compnav-field-filter");
                        switch (value) {
                            case 'string':
                                field_filter.setAttribute("type", "text")
                                if (filter_selections[data_root_key] !== undefined) {
                                    field_filter.value = filter_selections[data_root_key];
                                }
                                break;
                            case 'boolean':
                                field_filter.setAttribute("type", "checkbox");
                                if (filter_selections[data_root_key] !== undefined) {
                                    if(Boolean(filter_selections[data_root_key]))
                                    {
                                        field_filter.checked = true;
                                    }
                                }
                                break;
                            case 'number':
                                field_filter.setAttribute("type", "number")
                                if (filter_selections[data_root_key] !== undefined) {
                                    field_filter.value = filter_selections[data_root_key];
                                }
                                break;
                            default:
                                field_filter.setAttribute("type", "text");
                                field_filter.removeAttribute("placeholder");
                                field_filter.setAttribute("placeholder", "unknown");
                                field_filter.disabled = true;

                                break;
                        }

                        field_filter.setAttribute("name", data_root_key);
                        field_container.appendChild(field_filter)

                        //if (!parent_filter_container) {
                        filter_container.setAttribute("title", data_root_key);
                        filter_container.appendChild(field_container);
                        div_compnav_fields.appendChild(filter_container);
                        //} 
                        //else {
                        //    parent_filter_container.appendChild(field_container);
                        //    div_compnav_fields.appendChild(parent_filter_container);
                        //}
                    }
                    else {
                        if (Object.keys(value).length > 0) {                    
                            //if (!parent_filter_container) {
                            filter_container.setAttribute("title", data_root_key);
                            div_compnav_fields.appendChild(filter_container);
                            BuildFilterControls(filter_selections, filter_fields_obj[key], true, root + key + ".");
                            //} 
                            //else {
                            //    div_compnav_fields.appendChild(parent_filter_container);
                            //    BuildFilterControls(filter_fields_obj[key], parent_filter_container, root + key + ".");
                            //}
                        }
                    }
                }
            }
        }

        function FillBubble(dataset, element_prefix, fill_class) {
            if (dataset) {
                for (const data of dataset.split(',')) {
                    let element = document.getElementById(element_prefix + data);
                    if (dataset.includes(data)) {
                        element?.classList.add(fill_class);
                        element?.classList.remove("compnav-display-none");
                    } else {
                        element?.classList.remove(fill_class);
                        element?.classList.add("compnav-display-none");
                    }
                }
            }
        }
        
        //async function ShowItem(pack, item_id) {
        //    let doc = await pack.getDocument(item_id);
        //    doc.sheet.render(true);
        //}

        function ShowActionButtons(event){
            const item = document.getElementById(event.target.id);
            item.querySelector(".compnav-action-buttons").classList.remove("compnav-display-none");
        }

        function HideActionButtons(event){
            const item = document.getElementById(event.target.id);
            item.querySelector(".compnav-action-buttons").classList.add("compnav-display-none");
        }

        async function SelectItem(event){

            let Selected_Items_json = compnav_form_container.dataset.selected_items_json;
            let selected_items_obj = [];
            if (Selected_Items_json !== "") {
                selected_items_obj = JSON.parse(Selected_Items_json);
            }

            const item_button = await document.getElementById(event.target.id).parentElement.parentElement;
            let pack = await game.packs.get(item_button.dataset.game_pack_key);
            let item = await pack.getDocument(item_button.dataset.document_id);
            console.log(item);

            if(selected_items_obj.filter(x => x._id === item._id).length === 0)
            {
                selected_items_obj.push({
                    _id: item._id,
                    gpk: item.compendium.collection,
                    img: item.img,
                    name: item.name,
                    rarity: item.system.rarity
                });    

                let hdn_Selected_Items = document.getElementById("hdn_Selected_Items");
                hdn_Selected_Items.value = JSON.stringify(selected_items_obj, null, 2);
                
                //console.log("SelectItem");
                //console.log(selected_items_obj);
                //console.log(hdn_Selected_Items.value);
                select_item.click();       
            }
        }
        
        async function RemoveItem(event){
            //console.log("RemoveItem");
            //console.log(item_button.dataset.document_id);
            let Selected_Items_json = compnav_form_container.dataset.selected_items_json;
            let selected_items_obj = [];
            if (Selected_Items_json !== "") {
                selected_items_obj = JSON.parse(Selected_Items_json);
            }

            const item_button = await document.getElementById(event.target.id).parentElement.parentElement;
            selected_items_obj = selected_items_obj.filter(x => x._id !== item_button.dataset.document_id);
            let hdn_Selected_Items = document.getElementById("hdn_Selected_Items");
            hdn_Selected_Items.value = JSON.stringify(selected_items_obj, null, 2);
            remove_item.click();   
        }

        async function CreateRollTable(event){
            let Selected_Items_json = compnav_form_container.dataset.selected_items_json;
            let selected_items_obj = [];
            if (Selected_Items_json !== "") {
                selected_items_obj = JSON.parse(Selected_Items_json);
            }

            let hdn_Selected_Items = document.getElementById("hdn_Selected_Items");
            hdn_Selected_Items.value = JSON.stringify(selected_items_obj, null, 2);
            compnav_create_rollable_table.click(); 

        }

        async function SelectAll(event){
            let selected_items_obj = [];

            {{#each filter_results as |filter_results id|}}
                selected_items_obj.push({
                        _id:    "{{filter_results._id}}",
                        gpk:    "{{filter_results.gpk}}",
                        img:    "{{filter_results.img}}",
                        name:   "{{filter_results.name}}",
                        rarity: "{{filter_results.system.rarity}}"
                    });  
            {{/each}}
            
            let hdn_Selected_Items = document.getElementById("hdn_Selected_Items");
            hdn_Selected_Items.value = JSON.stringify(selected_items_obj, null, 2);
            compnav_select_all.click();       
        }
        
        async function DeleteItem(event){
            console.log("DeleteItem");
            const item_button = await document.getElementById(event.target.id).parentElement.parentElement;
            {{#each filter_results as |filter_results id|}}
                if("{{filter_results.name}}" === "#[CF_tempEntity]") {
                    let pack = await game.packs.get("{{filter_results.gpk}}");
                    let item = await pack.getDocument("{{filter_results._id}}");
                    pack.delete(item._id)
                }
            {{/each}}
            submit.click();   
        }

    </script>

    {{!-- begin markup --}}

    <div id="compnav_form_container" class="compnav-form-container" data-class_types_selected="{{class_types_selected}}"
        data-game_pack_keys_selected="{{game_pack_keys_selected}}" data-filter_fields_json="{{filter_fields_json}}" 
        data-game_pack_names="{{game_pack_names}}" data-doc_class_selected="{{doc_class_selected}}" 
        data-filter_selections="{{filter_selections}}" data-selected_items_json="{{selected_items_json}}">

        <div class="compnav-form-column">
            <h3>Filter</h3>        
            <div>
                {{localize "CompNav.form-app.filter.doc-class.name"}}:
            </div>
            <div class="compnav-form-filter">
                <p class="compnav-filter-bubble-container">
                    {{#each doc_classes as |doc_classes id|}}
                    <span id="compnav_doc_class_{{doc_classes}}" class="compnav-doc-class">{{doc_classes}}</span>
                    {{/each}}
                </p>
            </div>        
            <div>
                {{localize "CompNav.form-app.filter.class-type.name"}}:
            </div>
            <div id="div_compnav_class_types" class="compnav-form-filter">
                <p class="compnav-filter-bubble-container">
                    {{#unless class_types}}
                    n/a
                    {{/unless}}
                    {{#each class_types as |class_types id|}}
                    <span id="compnav_class_type_{{class_types}}" class="compnav-class-type">{{class_types}}</span>
                    {{/each}}
                </p>
            </div>        
            <div>
                {{localize "CompNav.form-app.filter.game-pack.name"}}:
            </div>
            <div id="div_compnav_game_packs" class="compnav-form-filter">
                <p class="compnav-filter-bubble-container">
                    {{#each game_pack_names as |game_pack_names id|}}
                    <span id="compnav_game_pack_name_{{id}}" title={{id}}
                        class="compnav-game-pack-name compnav-display-none">{{game_pack_names}}</span>
                    {{/each}}
                </p>
                {{!-- <p class="notes">
                    {{#each game_pack_keys_selected as |game_pack_keys_selected id|}}
                    {{game_pack_keys_selected}}</br>
                    {{/each}}
                </p> --}}
            </div>
            <div>
                <p>
                    <button type="submit" id="submit">
                        <i class="fa fa-filter"></i>Filter
                    </button>
                </p>
                <p>
                    <button type="submit" id="reset_filters">
                        <i class="fa fa-arrow-rotate-left"></i>Reset Fields
                    </button>
                </p>
                <div class="compnav-filtered-result-source">
                    {{#each filter_selections as |filter_selections id|}}
                    <span>{{ id}}: {{filter_selections}},&nbsp;</span>
                    {{/each}}
                </div>
            </div>
            <div id="div_compnav_fields" class="compnav-flex-scrollable">        
            </div>
        </div>
        
        <div class="compnav-form-column compnav-form-col-border">
            <h3>Results</h3>
            <div>
                <p>
                    <button onclick="SelectAll(event);">
                        <i class="fa fa-angle-double-right"></i>Select All
                    </button>
                </p>
                <p id="p_delete_cf_entity" class="compnav-display-none">
                    <button onclick="DeleteItem(event);" id="delete_cf_entity">
                        <i class="fa fa-ban compnav-ban"></i>Delete #[CF_tempEntity]
                    </button>
                </p>
                <p>
                    <button type="submit" id="clear_results">
                        <i class="fa fa-arrow-rotate-left"></i>Clear Results
                    </button>
                </p>
            </div>

            <div class="compnav-flex-scrollable">
                {{#each filter_results as |filter_results id|}}
                <div id="{{filter_results._id}}" class="compnav-flex-row compnav-filtered-result" title="{{filter_results.gpk}}"
                    data-game_pack_key="{{filter_results.gpk}}" data-document_id="{{filter_results._id}}"
                    onmouseenter="ShowActionButtons(event);" onmouseleave="HideActionButtons(event);">
                    <div class="compnav-filtered-result-img">
                        <img src="{{filter_results.img}}" width="48" height="48" />
                    </div>
                    <div class="compnav-filtered-result-name">
                        <h4><a>{{filter_results.name}}</a></h4>
                    </div>
                    <div class="compnav-filtered-result-source">
                        {{!-- {{filter_results.system.source}} --}}
                        <p class="compnav-action-buttons compnav-display-none">
                            {{!-- <button class="compnav-action-button" type="submit" onclick="DeleteItem(event);"
                                data-game_pack_key="{{filter_results.gpk}}" data-document_id="{{filter_results._id}}">
                                <a><i id="delete_item_{{filter_results._id}}" title="Delete item"
                                        class="fa fa-ban compnav-selected-item-action compnav-ban" ></i></a>
                            </button> --}}
                            <button class="compnav-action-button" type="submit" onclick="SelectItem(event);"
                                data-game_pack_key="{{filter_results.gpk}}" data-document_id="{{filter_results._id}}">
                                <a><i id="select_item_{{filter_results._id}}" title="Select item"
                                        class="fa fa-angle-double-right compnav-selected-item-action"></i></a>
                            </button>
                        </p>
                    </div>
                </div>
                {{/each}}
            </div>
        </div>

        <div id="Selected_Item_Drop_Zone" class="compnav-form-column compnav-form-col-border">
            <h3>Selected</h3>   
            <div class="compnav-form-group">
                <label><span>Name</span></label>
                <div class="compnav-form-fields">
                    <input type="text" name="compnav_name" placeholder="New Rollable Table" data-dtype="String">
                </div>
            </div> 
            {{!-- <div class="compnav-form-group">
                <label><span>Weighted by</span></label>
                <div class="compnav-form-fields">
                    <select name="compnav_weighted_by">
                        <option value="0">Rarity</option>
                        <option value="1">Price</option>
                        <option value="2">Level</option>
                    </select>
                </div>
            </div> --}}
            {{!-- <p>
                <button type="submit" id="compnav_create_compendium">
                    <i class="fa fa-book-atlas"></i>Create Compendium
                </button>
            </p> --}}
            <div>
                <p>
                    <button onclick="CreateRollTable(event);">
                        <i class="fa fa-table-list"></i>Create Rollable Table
                    </button>
                </p>
                <p>
                    <button type="submit" id="clear_selections">
                        <i class="fa fa-arrow-rotate-left"></i>Clear Selections
                    </button>
                </p>
                </div>
            <div class="compnav-flex-scrollable">            
                <input id="hdn_Selected_Items" type="hidden" name="hdn_Selected_Items" value=""></hidden>
                {{#each selected_items as |selected_items id|}}
                <div id="selected_item_{{selected_items._id}}" class="compnav-flex-row compnav-filtered-result"
                    title="{{selected_items.gpk}}" data-game_pack_key="{{selected_items.gpk}}"
                    data-document_id="{{selected_items._id}}" onmouseenter="ShowActionButtons(event);"
                    onmouseleave="HideActionButtons(event);">
                    <div class="compnav-filtered-result-img">
                        <img src="{{selected_items.img}}" width="48" height="48" />
                    </div>
                    <div class="compnav-filtered-result-name">
                        <h4><a>{{selected_items.name}}</a></h4>
                    </div>
                    <div class="compnav-filtered-result-source">
                        <p class="compnav-action-buttons compnav-display-none">
                            <button class="compnav-action-button" type="submit" onclick="RemoveItem(event);"
                                data-game_pack_key="{{selected_items.gpk}}" data-document_id="{{selected_items._id}}">
                                <a><i id="remove_item_{{selected_items._id}}" title="Remove item"
                                        class="fa fa-trash-can compnav-selected-item-action"></i></a>
                            </button>
                        </p>
                    </div>
                </div>
                {{/each}}
            </div>
        </div>
    </div>
    <button type="submit" id="select_item" class="compnav-display-none">
    </button>
    <button type="submit" id="delete_item" class="compnav-display-none">
    </button>
    <button type="submit" id="remove_item" class="compnav-display-none">
    </button>
    <button type="submit" id="compnav_create_compendium" class="compnav-display-none">
    </button>
    <button type="submit" id="compnav_create_rollable_table" class="compnav-display-none">
    </button>
    <button type="submit" id="compnav_select_all" class="compnav-display-none">
    </button>
    
</form>